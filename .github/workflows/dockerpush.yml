name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
      - main
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run tests
        run: docker build . --file Dockerfile
        
  dockle:
    needs: test
    name: Dockle validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build image
        run: |
          docker build --no-cache --force-rm -t dockle-ci-test:latest .
          docker image save dockle-ci-test:latest -o dockle-ci-test.tar
          chmod 666 dockle-ci-test.tar
      - name: Dockle image
        run:
          docker run -v ${{github.workspace}}/dockle-ci-test.tar:/tmp/dockle-ci-test.tar --rm goodwithtech/dockle:v0.2.4 -d --input /tmp/dockle-ci-test.tar
      - name: cleanup
        run: |
          docker image remove dockle-ci-test:latest
          rm ${{github.workspace}}/dockle-ci-test.tar
          
  dockerhub:
    needs: dockle
    name: Dockerhub publish
    runs-on: ubuntu-latest
    steps:
      - name: Latest tag
        run: echo ::save-state name=APP_VERSION::${GITHUB_REF##*/}
      - uses: actions/checkout@v3
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@v4
        env:
          APP_VERSION: ${{env.APP_VERSION}}
        with:
          name: rvflash/goup
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
          buildargs: APP_VERSION
          tags: "latest,${{env.APP_VERSION}}"